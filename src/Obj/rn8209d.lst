C51 COMPILER V9.00   RN8209D                                                               11/18/2015 10:20:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RN8209D
OBJECT MODULE PLACED IN .\Obj\rn8209d.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE app\rn8209d.c LARGE OMF2 WARNINGLEVEL(0) BROWSE ORDER INCDIR(.\app;.\Lib;.\
                    -bsp) DEBUG PRINT(.\Obj\rn8209d.lst) OBJECT(.\Obj\rn8209d.obj)

line level    source

   1          
   2          
   3          
   4          #include "rn8209d.h"
   5          #include "bsp.h"
   6          #include "spi.h"
   7          #include "usart.h"
   8          
   9          
  10          void rn8209_init(void)
  11          {
  12   1              SPI_CS_L();
  13   1      //      spi_write_byte(0xEA);
  14   1      //      spi_write_byte(0xA5);           //写使能
  15   1                      
  16   1              spi_write_byte(0xEA);           
  17   1              spi_write_byte(0xfA);           //复位
  18   1                      
  19   1              spi_write_byte(0xEA);           
  20   1              spi_write_byte(0x5A);           //电流通道A选择
  21   1      
  22   1      //      spi_write_byte()
  23   1      //      spi_write_byte(0xEA);           
  24   1      //      spi_write_byte(0xDC);           //写禁止
  25   1                      
  26   1      //      spi_write_byte(0xA9);           //脉冲捕获值
  27   1      //      spi_write_byte(0x38);
  28   1                      
  29   1              SPI_CS_H();
  30   1      }
  31          
  32          void rn8209_read_data(u8 addr, u8 *dat, u8 len)
  33          {
  34   1              u8 i = 0;
  35   1              u8 tmp[5] = {0};
  36   1              SPI_CS_L();
  37   1              
  38   1              spi_write_byte(addr);
  39   1              tmp[0] = len;
  40   1              
  41   1              for (i=0; i<len; i++)
  42   1              {
  43   2                      dat[i] = spi_read_byte();
  44   2                      tmp[i] = dat[i];        
  45   2              }
  46   1      //      tmp[i] = '\0';
  47   1              SPI_CS_H();
  48   1      }
  49          
  50          
  51          
  52          void rn8209_write_data(u8 addr, u8 *dat, u8 len)
  53          {
  54   1              u8 i = 0, tmp[2] = {0};
C51 COMPILER V9.00   RN8209D                                                               11/18/2015 10:20:07 PAGE 2   

  55   1              SPI_CS_L();
  56   1              
  57   1              tmp[0] = 0xEA;
  58   1              tmp[1] = 0xE5;
  59   1              
  60   1              spi_write_byte(tmp[0]);
  61   1              spi_write_byte(tmp[1]);
  62   1              
  63   1              spi_write_byte(addr|0x80);
  64   1              
  65   1              for (i=0; i<len; i++)
  66   1              {
  67   2                      spi_write_byte(dat[i]);
  68   2              }
  69   1              
  70   1              tmp[0] = 0xEA;
  71   1              tmp[1] = 0xDC;  
  72   1              spi_write_byte(tmp[0]);
  73   1              spi_write_byte(tmp[1]);
  74   1              
  75   1              SPI_CS_H();
  76   1      }
  77          
  78          
  79          
  80          u16 rn8209_get_vol(void)
  81          {
  82   1              u16 tmp = 0;
  83   1              u8 dat[3] = {0}, test = 0;
  84   1              u16 vol_val = 0;
  85   1              
  86   1              rn8209_read_data(RN8209_URMS_ADDR, dat, 3);
  87   1              tmp = dat[0];
  88   1              tmp = (tmp<<8) + dat[1];
  89   1                      
  90   1              vol_val = (float)tmp * 0.0294918; 
  91   1              
  92   1              return vol_val;
  93   1      }
  94          
  95          
  96          
  97          u32 rn8209_get_curr(void)
  98          {
  99   1              u8 dat[3] = {0}, test = 0;
 100   1              u32 curr_val = 0;
 101   1              
 102   1              rn8209_read_data(RN8209_IARMS_ADDR, dat, 3);
 103   1              
 104   1              curr_val = dat[0];
 105   1              curr_val = (curr_val<<8)+ dat[1];
 106   1              curr_val = (curr_val<<8) + dat[2];
 107   1              
 108   1              return curr_val;
 109   1      }
 110          
 111          
 112          
 113          float rn8209_get_curr1(void)
 114          {
 115   1              u16 tmp = 0;
 116   1              u8 dat[3] = {0}, test = 0;
C51 COMPILER V9.00   RN8209D                                                               11/18/2015 10:20:07 PAGE 3   

 117   1              float curr_val = 0;
 118   1              
 119   1              rn8209_read_data(RN8209_IARMS_ADDR, dat, 3);
 120   1              
 121   1              
 122   1              tmp = dat[0];
 123   1              tmp = (tmp<<8)+ dat[1];
 124   1              
 125   1              curr_val = (float)tmp * 0x000606;
 126   1              
 127   1              TX1_write2buff(0x11);
 128   1              test = tmp>>8;
 129   1              TX1_write2buff(test);
 130   1              test = tmp&0xff;
 131   1              TX1_write2buff(test);
 132   1              
 133   1              return curr_val;
 134   1      }
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          
 143          
 144          
 145          
 146          
 147          
 148          
 149          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    645    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----      36
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
